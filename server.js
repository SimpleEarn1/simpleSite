const express = require('express');
const mongoose = require('mongoose');
const path = require('path');
const cors = require('cors');
require('dotenv').config();  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

const app = express();

// üîß Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON –∏ form-urlencoded –¥–∞–Ω–Ω—ã—Ö
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS (—Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø frontend-—É –Ω–∞ Render)
app.use(cors({
  origin: 'https://simpleearn-1.onrender.com',
  credentials: true
}));

// üì¶ –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const userRoutes = require('./routes/user');
const adminRoutes = require('./routes/admin');
const authRoutes = require('./routes/auth');
const balanceRoutes = require('./routes/balance');
const teamRoute = require('./routes/team');

// üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ API
app.use('/api/user', userRoutes);
app.use('/api/admin', adminRoutes);
app.use('/api/auth', authRoutes);
app.use('/api/balance', balanceRoutes);
app.use('/api/team', teamRoute);

// ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/api', (req, res) => {
  res.send('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ SimpleEarn üëã');
});

// üß± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∏ React (client/build)
app.use(express.static(path.join(__dirname, 'client', 'build')));

// ‚öõÔ∏è –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ç–¥–∞—é—Ç—Å—è React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client', 'build', 'index.html'));
});

// üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const MONGODB_URI = process.env.MONGODB_URI;
const PORT = process.env.PORT || 5000;

console.log("üîê MONGODB_URI –∏–∑ .env:", MONGODB_URI);
console.log("JWT_SECRET =", process.env.JWT_SECRET);

mongoose.connect(MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => {
  console.log("‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞");
  app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  });
})
.catch((err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", err.message);
});